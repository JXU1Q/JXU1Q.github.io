<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>5a2j5l</title>
  
  <subtitle>[object Object]</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://5a2j5l.github.io/"/>
  <updated>2020-05-07T09:39:57.342Z</updated>
  <id>https://5a2j5l.github.io/</id>
  
  <author>
    <name>5a2j5l</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>多变量微积分(一)</title>
    <link href="https://5a2j5l.github.io/posts/9411.html"/>
    <id>https://5a2j5l.github.io/posts/9411.html</id>
    <published>2020-05-06T02:32:38.000Z</published>
    <updated>2020-05-07T09:39:57.342Z</updated>
    
    <content type="html"><![CDATA[<blockquote><h4 id="单变量时的情况"><a href="#单变量时的情况" class="headerlink" title="单变量时的情况"></a>单变量时的情况</h4></blockquote><p>多变量函数实际上是单变量函数的推广，故其各种定义均可在单变量函数中寻找到原型。所以我们先从单变量函数的连续性看起。</p><ul><li><p><strong>数列极限的定义</strong><br>数列极限即为一维数轴上点列的极限，可定义如下</p><blockquote><p>$\lim \limits_{x \to + \infty}a_n = a \Longleftrightarrow$对于数轴上的点列 $a_n$， 若$\forall \epsilon, \ \ \exists N \in \Bbb R$, 使得当 $n &gt; N$ 时， $|a_n - a| &lt; \epsilon$</p></blockquote><p>  也就是说，当 $n$ 足够大时，点列 $a_n$ 中的点与点 $a$ 的距离趋于 0。故另一种表达方式为</p><blockquote><p>$\lim \limits_{n \to +\infty}|a_n - a| = 0$</p></blockquote><p>  若定义 $\rho\ (a_1,\ a_2) = distance\ (a_1,\ a_2) = |a_1 - a_2|$, 则可以表示为</p><blockquote><p>$\lim \limits_{n \to +\infty} \rho\ (a_n,\ a) = 0$</p></blockquote></li><li><p><strong>函数的定义</strong></p><blockquote><p>对于两个非空数集 $A$ 和 $B$， 若存在一确定的对应法则 $f$, 使得对于集合 $A$ 中任意一个数 $x$, 在集合 $B$ 中都有唯一的数 $f(x)$ 与之对应，则称 $f:A\to B$ 为从集合 $A$ 到集合 $B$ 的一个<strong>函数</strong>， 记作 $y = f(x)$</p></blockquote><p>其中集合 $A$ 称为<strong>定义域</strong>，集合 $B$ 称为<strong>陪域</strong>，定义域、陪域和对应法则确定了一个（单变量）函数。</p></li><li><p><strong>函数的极限</strong></p><blockquote><p>$\lim \limits_{x \to x_0}f(x) = a \Longleftrightarrow$ 若函数 $f(x)$ 在 $x_0$ 的去心邻域内有定义，且对 $\forall \epsilon &gt; 0, \ \exists \delta&gt;0$，使得当$|x - x_0| &lt; \delta$ 时有 $|f(x) - a|&lt;\epsilon$</p></blockquote><p>同时， 函数的极限存在若干性质，以下列举部分：</p><ol><li><p><strong>海涅（Heine）定理</strong></p><blockquote><p>$\lim \limits_{x \to x_0}f(x)=a \Longleftrightarrow$ 对任意收敛于 $x_0$ 的数列 $a_n$，$a_n \not ={x_0}$, 有$\lim \limits_{n \to \infty}f(a_n)=a$ </p></blockquote><p>从直观上来说， 海涅定理表明，$x$ 不论以何种方式趋近于 $x_0$ 都不会改变函数极限的结果。因为所有趋于 $x_0$ 的数列 $a_n$ 实际上就包含了所有方式。</p></li><li><p><strong>四则运算</strong></p><blockquote><p>若有 $\lim \limits_{x \to x_0}f(x)=a,\ \lim \limits_{x \to x_0}g(x)=b$ 则<br>$\lim \limits_{x \to x_0}f(x)\pm g(x)=a\pm b$<br>$\lim \limits_{x \to x_0}f(x)\cdot g(x)=ab$,<br>若 $b \not ={0}$，则 $\lim \limits_{x \to x_0}\frac{f(x)}{g(x)}=\frac{a}{b}$</p></blockquote></li></ol><p> sss </p></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;h4 id=&quot;单变量时的情况&quot;&gt;&lt;a href=&quot;#单变量时的情况&quot; class=&quot;headerlink&quot; title=&quot;单变量时的情况&quot;&gt;&lt;/a&gt;单变量时的情况&lt;/h4&gt;&lt;/blockquote&gt;
&lt;p&gt;多变量函数实际上是单变量函数的推广，故其各种定
      
    
    </summary>
    
    
      <category term="calculus" scheme="https://5a2j5l.github.io/categories/calculus/"/>
    
    
      <category term="calculus" scheme="https://5a2j5l.github.io/tags/calculus/"/>
    
  </entry>
  
  <entry>
    <title>about</title>
    <link href="https://5a2j5l.github.io/posts/55988.html"/>
    <id>https://5a2j5l.github.io/posts/55988.html</id>
    <published>2020-05-04T01:36:46.000Z</published>
    <updated>2020-05-04T06:12:09.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="关于"><a href="#关于" class="headerlink" title="关于"></a>关于</h2><p>本站使用 <a href="https://hexo.io"><strong>hexo</strong></a>建立，基于<a href="https://www.gitee.com"><strong>gitee pages</strong></a></p><h3 id="建站教程"><a href="#建站教程" class="headerlink" title="建站教程"></a>建站教程</h3><ul><li><strong>安装 nodejs 环境</strong><br>一开始我直接使用homebrew安装nodejs<pre class="line-numbers language-shell"><code class="language-shell">$ brew install node<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>后面发现deploy的时候总是出错，在GitHub上发现有人提了一样的issue，原来是hexo当前版本还不支持nodejs &gt;= 14。于是卸载之，安装node12<pre class="line-numbers language-shell"><code class="language-shell">$ brew uninstall node$ brew install node@12<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><strong>安装 hexo</strong><br>  使用npm安装<pre class="line-numbers language-shell"><code class="language-shell">  $ npm install -g hexo-cli  $ npm install hexo-deployer-git --save<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>  当然也可以使用yarn安装<br>  <del>据说yarn比npm快，反正我没感觉出来</del><pre class="line-numbers language-shell"><code class="language-shell">  $ yarn global add hexo-cli  $ yarn add hexo-deployer-git<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><strong>建立博客文件夹并初始化</strong><pre class="line-numbers language-shell"><code class="language-shell">$ mkdir blog // 名字自己随便取$ cd blog // 进入文件夹$ hexo init<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>  然后hexo就会自动生成一个初始的博客模板 <del>（虽然很丑）</del></li><li><strong>更换主题</strong><br><del>（可选）能忍受默认的主题就不换了吧</del><br>在 <a href="http://hexo.io/themes"><strong>hexo themes</strong></a>挑选喜欢的主题，然后按照对应主题的README文件配置，此处不赘述 <del>（主要是懒）</del></li><li><strong>部署</strong><br>做完前面那些还是只能自己看图个乐，真要变成“网站”还得部署到服务器上。这里使用gitee pages部署。<ul><li>建库<br> 先在gitee上建立一个用于博客的库，并在服务里开启gitee pages<br> (ps:gitee pages 免费版并不会随着你的库的更新而更新网页，需要手动点更新)</li><li>在gitee上添加ssh公钥<pre class="line-numbers language-shell"><code class="language-shell">  $ ssh-keygen -t rsa -C "xxx@xxx.com" //生成ssh  $ cat .ssh/id_rsa.pub //打印公钥<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>  其中<a href="mailto:xxx@xxx.com">xxx@xxx.com</a>使用你的邮箱地址<br>  然后把打印出的一大坨东西全部复制，添加到gitee上</li><li>更改 _config.yml<br>  在blog根文件夹找到_config.yml，在文件末尾找到deploy相关设置，更改为<pre class="line-numbers language-yml"><code class="language-yml">  deploy:    type: git    repo: gitee.com/$username/$reponame    branch: master<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>  <strong>注意 !!!：  每个冒号后面必须加空格，不然会报错</strong><br>  其中$username改为你在gitee注册的用户名，$reponame改为你在gitee建立的仓库名</li></ul></li></ul><ul><li><strong>开始写博客</strong><br>经过前面一系列折腾以后，终于可以在自己的博客上写文章了。要新建一篇文章可以用命令<pre class="line-numbers language-shell"><code class="language-shell">$ hexo new 标题<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>hexo将自动在 sources\_posts\下生成一个标题.md文件，编辑该文件即可。<br>写完后，通过hexo自动部署到gitee<pre class="line-numbers language-shell"><code class="language-shell">$ hexo clean$ hexo g$ hexo d<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>这样就大功告成啦！</li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;关于&quot;&gt;&lt;a href=&quot;#关于&quot; class=&quot;headerlink&quot; title=&quot;关于&quot;&gt;&lt;/a&gt;关于&lt;/h2&gt;&lt;p&gt;本站使用 &lt;a href=&quot;https://hexo.io&quot;&gt;&lt;strong&gt;hexo&lt;/strong&gt;&lt;/a&gt;建立，基于&lt;a href=&quot;
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>01背包</title>
    <link href="https://5a2j5l.github.io/posts/9711.html"/>
    <id>https://5a2j5l.github.io/posts/9711.html</id>
    <published>2020-05-03T12:47:06.000Z</published>
    <updated>2020-05-04T06:11:33.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><blockquote><p>设有一个背包，容量为$V$，现有$n$种物品，每件物品体积为 $v_i$, 价值为$p_i$, 请问背包装的物品价值最大是多少？</p></blockquote><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>因为每种物品只有两种状态：要么取， 要么不取， 故称之为<strong>01背包</strong>。若用暴力解法，分析每一种情况，则复杂度为 $o(2^n)$ （对$n$件物品而言，每件都有两种可能，故为$2^n$）。<br>而从第一件物品按顺序来分析每件物品时，总价值只与是否放入当前物品以及放入之前背包状态有关，可用一个二维数组$f[i][v]$表示。其中$i$表示当前考虑第$i$件物品，而$v$表示考虑第$i$件物品时背包所剩容量，$f[i][v]$储存的值就是考虑前$i$件物品时所能得到的最大价值。<br>由此定义很容易得出<strong>递推关系式</strong>(<strong>状态转移式</strong>)为：<br>$$<br>f[i][v] = max(f[i - 1][v],\ \  f[i - 1][v - v_i] + p_i)<br>$$</p><h2 id="动态规划"><a href="#动态规划" class="headerlink" title="动态规划"></a>动态规划</h2><ul><li><input disabled="" type="checkbox"> 待更新 </li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;设有一个背包，容量为$V$，现有$n$种物品，每件物品体积为 $v_i$, 价值为$p_i$, 请
      
    
    </summary>
    
    
    
      <category term="algorithm" scheme="https://5a2j5l.github.io/tags/algorithm/"/>
    
  </entry>
  
</feed>
